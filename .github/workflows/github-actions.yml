name: GitHub Actions
run-name: ${{ github.ref_name }} GitHub Actions üöÄ
on: [push, pull_request]
jobs:
  Ping-Artifactory:
    runs-on: ubuntu-latest
    needs: Build-Publish
    steps:
      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
          JF_USER: ${{ secrets.JFROG_USERNAME }}
          JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      - run: |
          echo $JF_URL
          echo ${{ secrets.ARTIFACTORY_URL }}
          echo $JF_USER
          jf rt ping
  Build-Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code ‚¨áÔ∏è
        uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: Setup Gradle üêò
        uses: gradle/gradle-build-action@v2
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run build with Gradle Wrapper üèÉ
        run: ./gradlew build -x test
      - name: Run tests üßë‚Äç‚öïÔ∏è
        run: ./gradlew test
      # Might want to remove this step
      - name: Archive production artifacts ‚¨ÜÔ∏è
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: ./build/libs/saRestApi-*.jar
      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
          JF_USER: ${{ secrets.JFROG_USERNAME }}
          JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      - run: |
          # This command adds a new server configuration to the JFrog CLI
      - name: Create version for Artifactory
        run: |
          export BUILD_NAME="saidp-sdk-java"
          export BUILD_MODULE="sdk-java"
          export BUILD_NUMBER="1"

          export VERSION="1.0.3.5"

          jf rt upload "./build/libs/saRestApi-*.jar" radius-release-local/saRestApi/$PATH_TO_DIRECTORY --build-name $BUILD_NAME --build-number $BUILD_NUMBER --module $BUILD_MODULE
      # This action publishes the build information to Artifactory and deletes older builds
      - name: Publish to Artifactory
        run: |
          jf rt build-publish $BUILD_NAME $BUILD_NUMBER
      - run: echo "üçè This job's status is ${{ job.status }}."
